@model List<TreeOrder>

@{
    ViewData["Title"] = "Widok Drzewa";

}

@functions{

    void DisplayBranch(int fatherId)
    {
        List<TreeOrder> childrenBranches = new List<TreeOrder>();

        childrenBranches = Model.Where(x => x.IdParent.Equals(fatherId)).ToList();


        foreach(var item in childrenBranches)
        {
            <div class="container">
                      <button class="btn-outline-dark text-xl-start text-start col-7 m-1">

                                            Id:
                                            @item.IdTreeOrder
                                            Name :
                                            @item.Name
                                            Level:
                                            @item.Level
                                            Parent:
                                            @item.IdParent
                           
                        </button>

                   @{DisplayBranch(@item.IdTreeOrder);}

            </div>  
        }
        

    }


}




<div class=" container bg-light rounded mt-5">

    <form method="post" class="row col-12" asp-action="Index">
        <button type="submit" class="bt-dark col-3 btn-outline-dark" asp-route-usedSort="name">Sortowanie Alfabetyczne</button>
        <button type="submit" class="bt-dark col-3 btn-outline-dark"  asp-route-usedSort="name_desc">Sortowanie odwrotnie Alfabetyczne</button>
        <button type="submit" class="bt-dark col-3 btn-outline-dark"  asp-route-usedSort="id">Sortowanie id</button>
        <button type="submit" class="bt-dark col-3 btn-outline-dark"  asp-route-usedSort="id_desc">Sortowanie odwrotnie id</button>
    </form>
    <br/>
    <div class="row">
    
        @{DisplayBranch(0);}

    </div>
</div>



